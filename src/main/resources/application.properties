############################################
####               LOG                  ####
############################################
logging.config=classpath:log4j2.xml

############################################
####        DATA SOURCE                 ####
############################################
spring.datasource.url=${DEMO_MYSQL_DEMO_DB_URL}
spring.datasource.username=${DEMO_MYSQL_USER}
spring.datasource.password=${DEMO_MYSQL_PASSWORD}
# spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver
# druid配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# druid参数调优（可选）
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20

# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=6000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒

spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000

# 测试连接
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=false

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
# spring.datasource.maxOpenPreparedStatements=20
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters
spring.datasource.druid.filters= "stat" #配置多个英文逗号分隔
 


############################################
####                 JPA                ####
############################################
# init business table every time when using JPA
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql = true

############################################
####                Spring              ####
############################################
# 循环引用
spring.main.allow-circular-references=true

############################################
####             swagger-ui             ####
############################################
springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.api-docs.path=/v3/api-docs
#springdoc.packages-to-scan=*
#springdoc.paths-to-match=/*
# Packages to include
# springdoc.packagesToScan=com.jove.demo.controller
